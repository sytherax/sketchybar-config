#!/bin/bash

# --- Sourcing of core scripts + Initial setup config ---
RELPATH="$(dirname "$0")"
OS_VERSION="$(sw_vers -productVersion)"

export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:/run/current-system/sw/bin:/nix/var/nix/profiles/default/bin:$PATH"
mkdir -p "${TMPDIR}sketchybar"

if [[ -z $(ls /Library/Fonts/ | grep 'sketchybar-app-font') ]]; then
	echo 'Sketchybarfont not foundâ€¦' # Notice if Sketchybar-app-font is not installed
fi

# Optional user configuration
if [[ -n "$SKETCHYBAR_CONFIG" && -f "$SKETCHYBAR_CONFIG" ]]; then
	# External override path (useful for Nix)
	# shellcheck disable=SC1090
	source "$SKETCHYBAR_CONFIG"
elif [[ -f "$RELPATH/config.sh" ]]; then
	# Local config file in repository
	# shellcheck disable=SC1091
	source "$RELPATH/config.sh"
fi

# Fallback defaults if variables unset
: "${NOTCH_WIDTH:=180}"
: "${MUSIC_INFO_WIDTH:=80}"
: "${CPU_UPDATE_FREQ:=2}"
: "${MENUBAR_AUTOHIDE:=True}" # True / False
: "${GITHUB_TOKEN:="~/.github_token"}"
: "${WIFI_UNREDACTOR:="~/Applications/wifi-unredactor.app"}"
: "${BAR_LOOK:="plain"}" # <"plain"|"compact">
: "${FORCE_WM:=""}" # <""|"yabai"|"aerospace"|"rift">

[ ${#MENU_CONTROLS[@]} -eq 0 ] && MENU_CONTROLS=(
	"Control__Center,Bluetooth"
)

source "$RELPATH/set_colors.sh"
source "$RELPATH/icon_map.sh"
source "$RELPATH/add_separator.sh"

### Global bar properties

FONT="SF Pro"
OUTER_PADDINGS=5
INNER_PADDINGS=5
X_BAR_PADDING=12

case ${BAR_LOOK} in
"plain")
	BAR_HEIGHT=34
	BAR_MARGIN=4
	if [ $(echo $OS_VERSION | awk -F. '{print $1}') -gt 15 ]; then
		BAR_CORNER_RADIUS=14
	else
		BAR_CORNER_RADIUS=12
	fi
	;;
"compact")
	BAR_HEIGHT=30
	BAR_MARGIN=0
	BAR_CORNER_RADIUS=4
	;;
esac

# --- Bar & Default Properties ---

bar=(
	height=$BAR_HEIGHT
	y_offset=$BAR_MARGIN
	margin=$BAR_MARGIN
	shadow=on
	shadow.color=$SHADOW_COLOR
	padding_left=0
	padding_right=$X_BAR_PADDING
	color="$BAR_COLOR"
	border_width=1
	border_color=$BORDER_COLOR
	corner_radius=$BAR_CORNER_RADIUS
	blur_radius=40
	notch_width=$NOTCH_WIDTH
)

defaults=(
	updates=when_shown
	icon.font="$FONT:Regular:14.0"
	icon.color=$ICON_COLOR
	padding_left=$OUTER_PADDINGS
	padding_right=$OUTER_PADDINGS
	icon.padding_left=$INNER_PADDINGS
	icon.padding_right=$INNER_PADDINGS
	label.font="$FONT:Semibold:13.0"
	label.color=$LABEL_COLOR
	label.padding_left=$INNER_PADDINGS
	label.padding_right=$INNER_PADDINGS
	background.corner_radius=8
	popup.y_offset=4
	popup.background.border_width=1
	popup.background.corner_radius=6
	popup.background.border_color=$POPUP_BORDER_COLOR
	popup.background.color=$POPUP_BACKGROUND_COLOR
	popup.blur_radius=20
	popup.background.shadow.drawing=on
)

zones=(
	background.height=$(($BAR_HEIGHT - 8))
	background.border_width=2
	background.border_color=$HIGH_MED
	background.color=$OVERLAY
	background.corner_radius=8
	blur_radius=24
)

sketchybar --bar "${bar[@]}"
sketchybar --default "${defaults[@]}"

# --- Bar Items ---

source "$RELPATH/sketchy-items/logo.sh"
source "$RELPATH/sketchy-items/spaces.sh"
source "$RELPATH/sketchy-items/frontapp.sh"
source "$RELPATH/sketchy-items/menus.sh"
source "$RELPATH/sketchy-items/calendar.sh"
source "$RELPATH/sketchy-items/mic.sh"
source "$RELPATH/sketchy-items/volume.sh"
source "$RELPATH/sketchy-items/battery.sh"
source "$RELPATH/sketchy-items/wifi.sh"
source "$RELPATH/sketchy-items/display.sh"
source "$RELPATH/sketchy-items/more-menu.sh"
source "$RELPATH/sketchy-items/packages.sh"
source "$RELPATH/sketchy-items/currentuser.sh"
source "$RELPATH/sketchy-items/notifications.sh"
source "$RELPATH/sketchy-items/controls.sh"

source "$RELPATH/sketchy-items/music.sh"

# CPU module is always sourced by default (original behavior)
source "$RELPATH/sketchy-items/cpu.sh"

sketchybar --add bracket base-controls battery wifi display \
	--set base-controls "${zones[@]}" \
	--add bracket volume_controls volume_icon mic \
	--set volume_controls "${zones[@]}" \
	--add bracket more_menu '/moremenu\..*/' "${menuitem[@]}" \
	--set more_menu "${zones[@]}"

# Add window manager specific workspace change triggers
if [ "$FORCE_WM" = "aerospace" ]; then
  # Create single aerospace workspace change event
  sketchybar --add event aerospace_workspace_change
elif [ "$FORCE_WM" = "rift" ]; then
  # Create single rift workspace change event
  sketchybar --add event rift_workspace_change
fi

sketchybar --update

echo "sketchybar configuation loaded.."
